{"ref":"a766c1e0-2b8c-4d18-9a26-b8ec22c45fd3","syncData":{"version":1,"machineId":"b424fc3e-9790-445d-ad68-2686cba4ee9d","content":"{\"c.json\":\"{\\n\\t// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"Contests.code-snippets\":\"{\\n\\t\\\"default\\\":{\\n\\t\\t\\n\\t}\\n}\",\"cpp.json\":\"{\\n\\t\\\"\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cpp_base\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"#include<bits/stdc++.h>\\\",\\n\\t\\t  \\\"using namespace std;\\\",\\n\\t\\t  \\\"typedef long long ll;\\\",\\n\\t\\t  \\\"#define endl '\\\\\\\\n'\\\",\\n\\t\\t  \\\"const int mod=1000000007;\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"void solve()\\\",\\n\\t\\t  \\\"{\\\",\\n\\t\\t  \\\"    ll i,j,k,n,m,q;\\\",\\n\\t\\t  \\\"    $0\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"signed main()\\\",\\n\\t\\t  \\\"{\\\",\\n\\t\\t  \\\"    ios_base::sync_with_stdio(0);\\\",\\n\\t\\t  \\\"    cin.tie(0); cout.tie(0);\\\",\\n\\t\\t  \\\"   \\\",\\n\\t\\t  \\\"    // #ifndef ONLINE_JUDGE\\\",\\n\\t\\t  \\\"    // freopen(\\\\\\\"input.txt\\\\\\\", \\\\\\\"r\\\\\\\", stdin);  \\\",\\n\\t\\t  \\\"    // freopen(\\\\\\\"output.txt\\\\\\\", \\\\\\\"w\\\\\\\", stdout);\\\",\\n\\t\\t  \\\"    // #endif\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"    int t=1;\\\",\\n\\t\\t  \\\"    cin>>t;\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"    while(t--)\\\",\\n\\t\\t  \\\"      solve();\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"    return 0;\\\",\\n\\t\\t  \\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"\\\"\\n\\t  }\\n}\\n\",\"cpp2.json.code-snippets\":\"{\\n\\t\\\"Boiler Plate\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cpp_contest\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"#include<bits/stdc++.h>\\\",\\n\\t\\t  \\\"using namespace std;\\\",\\n\\t\\t  \\\"typedef long long int ll;\\\",\\n\\t\\t  \\\"#define endl '\\\\\\\\n' \\\",\\n\\t\\t  \\\"#define YES cout<<\\\\\\\"YES\\\\\\\"<<endl;\\\",\\n\\t\\t  \\\"#define NO cout<<\\\\\\\"NO\\\\\\\"<<endl;\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"int main(){\\\",\\n\\t\\t  \\\"    ios_base::sync_with_stdio(false);\\\",\\n\\t\\t  \\\"    cin.tie(NULL);\\\",\\n\\t\\t  \\\"    ll t=1;\\\",\\n\\t\\t  \\\"    cin>>t;\\\",\\n\\t\\t  \\\"    while(t--){\\\",\\n\\t\\t  \\\"        $1\\\",\\n\\t\\t  \\\"    }\\\",\\n\\t\\t  \\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Boiler Plate\\\"\\n\\t  }\\n}\",\"cpp3.json.code-snippets\":\"{\\n\\t\\\"Boiler Plate\\\": {\\n\\t\\t\\\"prefix\\\": \\\"cpp_contest2\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"#include<bits/stdc++.h>\\\",\\n\\t\\t  \\\"using namespace std;\\\",\\n\\t\\t  \\\"typedef long long int ll;\\\",\\n\\t\\t  \\\"#define endl '\\\\\\\\n' \\\",\\n\\t\\t  \\\"#define YES cout<<\\\\\\\"YES\\\\\\\"<<endl;\\\",\\n\\t\\t  \\\"#define NO cout<<\\\\\\\"NO\\\\\\\"<<endl;\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"void solve(){\\\",\\n\\t\\t  \\\"    $1\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"int main(){\\\",\\n\\t\\t  \\\"    ios_base::sync_with_stdio(false);\\\",\\n\\t\\t  \\\"    cin.tie(NULL);\\\",\\n\\t\\t  \\\"    ll t=1;\\\",\\n\\t\\t  \\\"    cin>>t;\\\",\\n\\t\\t  \\\"    while(t--){\\\",\\n\\t\\t  \\\"        solve();\\\",\\n\\t\\t  \\\"    }\\\",\\n\\t\\t  \\\"}\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Boiler Plate\\\"\\n\\t  }\\n}\"}"}}